openapi: 3.1.0
info:
  title: Account Management
  version: '1.0'
  summary: Account Management endpoints
  description: CRUD on an account
  contact:
    name: Alok
    url: 'https://blendapp.in'
    email: contact@blendapp.in
  termsOfService: 'https://blendapp.in/legal'
servers:
  - url: 'https://api.yourdomainname.com'
paths:
  '/accounts/{accountId}':
    parameters:
      - schema:
          type: string
        name: accountId
        in: path
        required: true
    get:
      summary: Get Account
      tags: []
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
              examples:
                Get User Alok Rao:
                  value:
                    id: 142
                    firstName: Alok
                    lastName: Rao
                    email: alok.rao@gmail.com
                    createDate: '2021-07-21T17:32:28Z'
        '404':
          description: User Not Found
      operationId: get-accounts-accountId
      description: Retrieve the information of the user with the matching user ID.
    put:
      summary: Modify Account
      tags: []
      operationId: put-accounts-accountId
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      description: Edit profile details of a user
  /auth/sign-up:
    parameters: []
    post:
      summary: Account Creation
      operationId: post-auth-sign-up
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Bad Request
        '409':
          description: Conflict
      description: Create a new account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
            examples:
              Creating for Alok:
                value:
                  email: alokrao@gmail.com
                  password: pa$$word
        description: Credentials for the account
      tags: []
  /auth/sign-in:
    post:
      summary: Signing in
      tags: []
      operationId: post-auth-sign-in
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Not Found
      description: Sign in with your credentials
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credential'
            examples:
              Sign in as Alok:
                value:
                  email: alokrao@gmail.com
                  password: pa$$word
        description: ''
components:
  schemas:
    Account:
      title: Account
      type: object
      description: Details of the user this account is created for
      examples:
        - id: 142
          firstName: Alok
          lastName: Rao
          email: alokrao@gmail.com
          createDate: '2017-07-21T17:32:28Z'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date-time
          description: The date that the user was created.
          readOnly: true
      required:
        - firstName
        - lastName
        - email
        - createDate
    Credential:
      title: Credential
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
  securitySchemes: {}
